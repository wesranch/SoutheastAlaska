pivot_longer(cols=starts_with("annual_"),
names_to="SpeciesName", values_to="mean_AGB")
pivoted %>%
ggplot(aes(x=Time, y=mean_AGB))+
geom_ribbon(aes(ymin = mean_AGB - SD_AGB, ymax = mean_AGB + SD_AGB, alpha = 0.4))+
geom_line(size=0.6)+
ggtitle("Spp. Biomass Landis Initial vs Simulated Year 54")+
labs(color='Simulated')+
scale_x_continuous(name="Cohort Age") +
scale_y_continuous(name= expression(paste("Aboveground biomass (g m"^"2",")")), labels = scales::comma)+
#scale_color_manual(values= c('darkred', 'blue'))+
facet_wrap(~SpeciesName, scales="free")+
theme_bw()
#read uncropped
tree_data <- tree_data_AK[,c('PLT_CN','INVYR','SPCD','CARBON_AG','TPA_UNADJ','DIA')] #columns of interest
species_table<-read.csv(paste0(FIA_dir, "REF_SPECIES.csv"))
spp_table_short<-species_table[c(1:4, 44:45)]
tree_species_joined<-left_join(tree_data, spp_table_short)
print(unique(tree_data$SPCD))
tree_species_joined$SPECIES[tree_species_joined$SPCD==264]
tree_species_joined$SPECIES[tree_species_joined$SPCD[[1]]]
unique(tree_species_joined$SPECIES[tree_species_joined$SPCD[[1]]])
unique(tree_species_joined$SPECIES[tree_species_joined$SPCD[1]])
unique(tree_species_joined$SPECIES[tree_species_joined$SPCD])
tree_species_joined<-left_join(tree_data, spp_table_short)
print(unique(tree_data$SPCD))
tree_species_joined<-left_join(tree_data, spp_table_short)
tree_species_joined$SPECIES[tree_species_joined$SPCD==98]
tree_species_joined$SPECIES[tree_species_joined$SPCD[[1==98]
]]
tree_species_joined$SPECIES[tree_species_joined$SPCD[[1]]==98]
tree_species_joined$SPECIES[tree_species_joined$SPCD[1]==98]
tree_species_joined$SPECIES[tree_species_joined$SPCD==98[[1]]]
tree_species_joined$SPECIES[tree_species_joined$SPCD==98][[1]]
print(unique(tree_data$SPCD))
tree_species_joined$SPECIES[tree_species_joined$SPCD==264][[1]]
tree_species_joined$SPECIES[tree_species_joined$SPCD==42][[1]]
tree_species_joined$SPECIES[tree_species_joined$SPCD==108][[1]]
tree_species_joined$SPECIES[tree_species_joined$SPCD==242][[1]]
unique_spp <- c()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$i][[1]]
unique_spp[[i]] <- spp
}
unique_spp <- list()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[as.character(i)]] <- spp
}
print(paste0("unique species in the FIA data: ", unique_spp))
print(unique_spp)
print(unique_spp)[[1]]
print(unique_spp)[1]
print(unique_spp)[[]]
print(unique_spp)[]
unique_spp[[i]] <- paste0(gen,spp)
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
gen <- tree_species_joined$GENUS[tree_species_joined$SPCD==i][[1]]
unique_spp[[i]] <- paste0(gen,spp)
}
print(unique_spp)[]
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
gen <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[i]] <- spp
}
print(unique_spp)[]
unique_spp <- list()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
gen <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[i]] <- paste0(gen,spp)
}
print(unique_spp)[]
unique_spp <- list()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
#gen <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[i]] <- paste0(spp)
}
print(unique_spp)[]
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
#gen <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[as.character(i)]] <- paste0(spp)
}
print(unique_spp)[]
print(unique_spp)
lol
print(unique_spp)
tree_species_joined<-left_join(tree_data, spp_table_short)
unique_spp <- list()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
#gen <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[as.character(i)]] <- paste0(spp)
}
print(unique_spp)
i <- tree_species_joined$SPCD[[1]]
i
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
spp
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[2]]
spp
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][2]
spp
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i]
spp
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[[1]]]
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]][]
spp
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]][[]]
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]][]
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]][][]
spp
unique_spp <- list()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
gen <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
unique_spp[[as.character(i)]] <- paste0(gen,spp)
}
print(unique_spp)
unique_spp <- list()
for (i in unique(tree_species_joined$SPCD)){
spp <- tree_species_joined$SPECIES[tree_species_joined$SPCD==i][[1]]
gen <- tree_species_joined$GENUS[tree_species_joined$SPCD==i][[1]]
unique_spp[[as.character(i)]] <- paste0(gen,spp)
}
print(unique_spp)
# set up foliar ratio column
Jenkins_B1<-tree_species_joined$JENKINS_FOLIAGE_RATIO_B1
Jenkins_B2<-tree_species_joined$JENKINS_FOLIAGE_RATIO_B2
foliage_ratio<- exp(Jenkins_B1 + Jenkins_B2 / (DIA*2.54))
# set up foliar ratio column
DBH<-tree_species_joined$DIA
Jenkins_B1<-tree_species_joined$JENKINS_FOLIAGE_RATIO_B1
Jenkins_B2<-tree_species_joined$JENKINS_FOLIAGE_RATIO_B2
foliage_ratio<- exp(Jenkins_B1 + Jenkins_B2 / (DBH*2.54))
final_table_ratio<-cbind(tree_species_joined, foliage_ratio)
final_table_ratio
print(unique(tree_species_joined$COMMON_NAME))
unique(tree_species_joined$COMMON_NAME)
Species_unique<- na.omit(unique(tree_species_joined$SPCD))
#Calculate the min, mean and max foliar ratio for each species
species.matrix <-NULL
for (i in Species_unique){
each_FB_subset <- subset(final_table_ratio, final_table_ratio[,"SPCD"] == i)
min_ratio<- min(each_FB_subset$foliage_ratio)
mean_ratio<- mean(each_FB_subset$foliage_ratio)
max_ratio<- max(each_FB_subset$foliage_ratio)
FG_row <- cbind.data.frame(i, mean_ratio, min_ratio, max_ratio) #creating new dataframe
species.matrix <- rbind(species.matrix, FG_row)
}
head(species.matrix)
Species_unique
final_table_ratio
Species_unique
i <- Species_unique[[1]]
i
each_FB_subset <- subset(final_table_ratio, final_table_ratio[,"SPCD"] == i)
each_FB_subset
min_ratio<- min(each_FB_subset$foliage_ratio)
min_ratio
min_ratio<- min(each_FB_subset$foliage_ratio, na.rm = T)
min_ratio
mean_ratio<- mean(each_FB_subset$foliage_ratio, na.rm = T)
mean_ratio
max_ratio<- max(each_FB_subset$foliage_ratio, na.rm = T)
max_ratio
#Calculate the min, mean and max foliar ratio for each species
species.matrix <-NULL
for (i in Species_unique){
each_FB_subset <- subset(final_table_ratio, final_table_ratio[,"SPCD"] == i)
min_ratio<- min(each_FB_subset$foliage_ratio, na.rm = T)
mean_ratio<- mean(each_FB_subset$foliage_ratio, na.rm = T)
max_ratio<- max(each_FB_subset$foliage_ratio, na.rm = T)
FG_row <- cbind.data.frame(i, mean_ratio, min_ratio, max_ratio) #creating new dataframe
species.matrix <- rbind(species.matrix, FG_row)
}
species.matrix
head(species.matrix)
#Calculate the min, mean and max foliar ratio for each species
species.matrix <-NULL
for (i in Species_unique){
each_FB_subset <- subset(final_table_ratio, final_table_ratio[,"SPCD"] == i)
min_ratio<- min(each_FB_subset$foliage_ratio, na.rm = T)
mean_ratio<- mean(each_FB_subset$foliage_ratio, na.rm = T)
max_ratio<- max(each_FB_subset$foliage_ratio, na.rm = T)
FG_row <- cbind.data.frame(i, mean_ratio, min_ratio, max_ratio) #creating new dataframe
species.matrix <- rbind(species.matrix, FG_row)
}
head(species.matrix)
species.matrix
colnames(species.matrix) <- c("SPCD", "Avg_Foliage_Ratio", "Min_FR", "Max_FR")
species.matrix_final<-species.matrix[order(species.matrix[,"SPCD"]),]
species.matrix_final
# join by common names then write
spp_lookup <- read.csv(paste0(FIA_dir, "TreeSppRef.csv"))
setwd(dir)
dir
seDIR <- "F:/seAlaska/landis/"
setwd(seDIR)
colnames(species.matrix_final)
foliar_output<-write.csv(species.matrix_final, "AvgFoliarRatios_FIA_SE.csv")
print(species.matrix_final)
foliar_output<-write.csv(species.matrix_final, "AvgFoliarRatios_FIA_SE.csv", row.names = F)
spp_lookup
#Combine it with a portion of the ref table so you know the common name of each species.
# missing alder and willow
colnames(spp_lookup)[colnames(spp_lookup) == "FIA.Code"] <- "SPCD"
Combined_Table_Ratios
Combined_Table_Ratios <- left_join(species.matrix_final,spp_lookup, by="SPCD") %>%
select(SPCD, Avg_Foliage_Ratio, Min_FR, Max_FR, Common.Name)
Combined_Table_Ratios
tree_species_joined$SPCD[tree_species_joined$SPECIES=="glauca"]
tree_species_joined$SPCD[tree_species_joined$SPECIES=="menziesii"]
Combined_Table_Ratios
seDIR <- "F:/seAlaska/landis/"
#######
# join to IC file // Dalton
IC <- read.csv(paste0(seDIR, "/simulations/North_Test/North/AKCarbon_IC_WR_04082025.csv"))
IC
unique(Combined_Table_Ratios$Common.Name)
unique(IC$SpeciesName)
update_common_name <- function(df) {
df %>%
mutate(Common.Name = case_when(
Common.Name == "Sitka spruce" ~ "Tamarack",
Common.Name == "white spruce" ~ "WhiteSpruce",
Common.Name == "black spruce" ~ "BlackSpruce",
Common.Name == "balsam poplar" ~ "BalsamPoplar",
Common.Name == "quaking aspen" ~ "QuakingAspen",
Common.Name == "Alaska yellow-cedar" ~ "AlaskaYellowCedar",
Common.Name == "western hemlock" ~ "WesternHemlock",
Common.Name == "mountain hemlock" ~ "MountainHemlock",
Common.Name == "Pacific silver fir" ~ "PacificSilverFir",
Common.Name == "red alder" ~ "RedAlder",
Common.Name == "western redcedar" ~ "WesternRedcedar",
Common.Name == "subalpine fir" ~ "SubalpineFir",
Common.Name == "paper birch" ~ "PaperBirch",
TRUE ~ Common.Name
))
}
#calculations make sense but we lost a couple spp.
Combined_Table_Ratios_v2 <- update_common_name(Combined_Table_Ratios)
Combined_Table_Ratios_v2
df %>%
mutate(Common.Name = case_when(
Common.Name == "Sitka spruce" ~ "Tamarack",
Common.Name == "white spruce" ~ "WhiteSpruce",
Common.Name == "black spruce" ~ "BlackSpruce",
Common.Name == "balsam poplar" ~ "BalsamPoplar",
Common.Name == "quaking aspen" ~ "QuakingAspen",
Common.Name == "Alaska yellow-cedar" ~ "AlaskaYellowCedar",
Common.Name == "western hemlock" ~ "WesternHemlock",
Common.Name == "mountain hemlock" ~ "MountainHemlock",
Common.Name == "Pacific silver fir" ~ "PacificSilverFir",
Common.Name == "red alder" ~ "RedAlder",
Common.Name == "western redcedar" ~ "WesternRedcedar",
Common.Name == "subalpine fir" ~ "SubalpineFir",
Common.Name == "paper birch" ~ "PaperBirch",
Common.Name == "lodgepole pine" ~ "LodgepolePine",
TRUE ~ Common.Name
))
update_common_name <- function(df) {
df %>%
mutate(Common.Name = case_when(
Common.Name == "Sitka spruce" ~ "Tamarack",
Common.Name == "white spruce" ~ "WhiteSpruce",
Common.Name == "black spruce" ~ "BlackSpruce",
Common.Name == "balsam poplar" ~ "BalsamPoplar",
Common.Name == "quaking aspen" ~ "QuakingAspen",
Common.Name == "Alaska yellow-cedar" ~ "AlaskaYellowCedar",
Common.Name == "western hemlock" ~ "WesternHemlock",
Common.Name == "mountain hemlock" ~ "MountainHemlock",
Common.Name == "Pacific silver fir" ~ "PacificSilverFir",
Common.Name == "red alder" ~ "RedAlder",
Common.Name == "western redcedar" ~ "WesternRedcedar",
Common.Name == "subalpine fir" ~ "SubalpineFir",
Common.Name == "paper birch" ~ "PaperBirch",
Common.Name == "lodgepole pine" ~ "LodgepolePine",
TRUE ~ Common.Name
))
}
#calculations make sense but we lost a couple spp.
Combined_Table_Ratios_v2 <- update_common_name(Combined_Table_Ratios)
IC_w_foliar_measurements <- left_join(IC, Combined_Table_Ratios_v2, by = c("SpeciesName" = "Common.Name"))
IC_w_foliar_measurements
update_common_name <- function(df) {
df %>%
mutate(Common.Name = case_when(
Common.Name == "Sitka spruce" ~ "SitkaSpruce",
Common.Name == "white spruce" ~ "WhiteSpruce",
Common.Name == "black spruce" ~ "BlackSpruce",
Common.Name == "balsam poplar" ~ "BalsamPoplar",
Common.Name == "quaking aspen" ~ "QuakingAspen",
Common.Name == "Alaska yellow-cedar" ~ "AlaskaYellowCedar",
Common.Name == "western hemlock" ~ "WesternHemlock",
Common.Name == "mountain hemlock" ~ "MountainHemlock",
Common.Name == "Pacific silver fir" ~ "PacificSilverFir",
Common.Name == "red alder" ~ "RedAlder",
Common.Name == "western redcedar" ~ "WesternRedcedar",
Common.Name == "subalpine fir" ~ "SubalpineFir",
Common.Name == "paper birch" ~ "PaperBirch",
Common.Name == "lodgepole pine" ~ "LodgepolePine",
TRUE ~ Common.Name
))
}
#calculations make sense but we lost a couple spp.
Combined_Table_Ratios_v2 <- update_common_name(Combined_Table_Ratios)
IC_w_foliar_measurements <- left_join(IC, Combined_Table_Ratios_v2, by = c("SpeciesName" = "Common.Name"))
IC_w_foliar_measurements
unique(IC_w_foliar_measurements$Avg_Foliage_Ratio[IC_w_foliar_measurements$SpeciesName==WhiteSpruce])
unique(IC_w_foliar_measurements$Avg_Foliage_Ratio[IC_w_foliar_measurements$SpeciesName=="WhiteSpruce"])
unique(Combined_Table_Ratios_v2$Common.Name)
update_common_name <- function(df) {
df %>%
mutate(Common.Name = case_when(
Common.Name == "Sitka spruce" ~ "SitkaSpruce",
Common.Name == "white spruce" ~ "WhiteSpruce",
Common.Name == "black spruce" ~ "BlackSpruce",
Common.Name == "balsam poplar" ~ "BalsamPoplar",
Common.Name == "quaking aspen" ~ "QuakingAspen",
Common.Name == "Alaska yellow-cedar" ~ "AlaskaYellowCedar",
Common.Name == "western hemlock" ~ "WesternHemlock",
Common.Name == "mountain hemlock" ~ "MountainHemlock",
Common.Name == "Pacific silver fir" ~ "PacificSilverFir",
Common.Name == "red alder" ~ "RedAlder",
Common.Name == "western redcedar" ~ "WesternRedcedar",
Common.Name == "subalpine fir" ~ "SubalpineFir",
Common.Name == "paper birch" ~ "PaperBirch",
Common.Name == "lodgepole pine" ~ "LodgepolePine",
TRUE ~ Common.Name
))
}
IC_w_foliar_measurements <- left_join(IC, Combined_Table_Ratios_v2, by = c("SpeciesName" = "Common.Name"))
unique(IC_w_foliar_measurements$SpeciesName)
0.077+0.005
ratio <- white_spruce_ratio+0.0005#higher foliar ratio
0.077+0.005
0.077+0.0005
0.0774+0.0005
############
# for species missing DIA measurements (avg)
white_spruce_ratio <- 0.07744032
lodgepole_ratio <- 0.07364475
species_missing_ratios <- c("DouglasFir", "WesternWhitePine", "EngelmannSpruce")
for (species in unique(IC_w_foliar_measurements$SpeciesName)) {
if (species %in% species_missing_ratios) {
if (species == "EngelmannSpruce") {
ratio <- white_spruce_ratio
} else if (species == "DouglasFir") {
ratio <- white_spruce_ratio+0.005#higher foliar ratio
} else if (species == "WesternWhitePine") {
ratio <- lodgepole_ratio+0.005#higher foliar ratio
}
}
# apply respective ratios
species_condition <- IC_w_foliar_measurements$SpeciesName == species
IC_w_foliar_measurements$LeafBiomass[species_condition] <- ratio * IC_w_foliar_measurements$CohortBiomass[species_condition]
IC_w_foliar_measurements$WoodBiomass[species_condition] <- IC_w_foliar_measurements$CohortBiomass[species_condition] - IC_w_foliar_measurements$LeafBiomass[species_condition]
}
for (species in unique(IC_w_foliar_measurements$SpeciesName)) {
if (species %in% species_missing_ratios) {
if (species == "EngelmannSpruce") {
ratio <- white_spruce_ratio
} else if (species == "DouglasFir") {
ratio <- white_spruce_ratio+0.005#higher foliar ratio
} else if (species == "WesternWhitePine") {
ratio <- lodgepole_ratio+0.005#higher foliar ratio
}
}
# apply respective ratios
species_eq <- IC_w_foliar_measurements$SpeciesName == species
IC_w_foliar_measurements$LeafBiomass[species_eq] <- ratio * IC_w_foliar_measurements$CohortBiomass[species_eq]
IC_w_foliar_measurements$WoodBiomass[species_eq] <- IC_w_foliar_measurements$CohortBiomass[species_eq] - IC_w_foliar_measurements$LeafBiomass[species_eq]
}
for (species in unique(IC_w_foliar_measurements$SpeciesName)) {
if (species %in% species_missing_ratios) {
if (species == "EngelmannSpruce") {
ratio <- white_spruce_ratio
} else if (species == "DouglasFir") {
ratio <- white_spruce_ratio+0.005#higher foliar ratio
} else if (species == "WesternWhitePine") {
ratio <- lodgepole_ratio+0.005#higher foliar ratio
} else {
ratio <- default_ratio
}
}
# apply respective ratios
species_eq <- IC_w_foliar_measurements$SpeciesName == species
IC_w_foliar_measurements$LeafBiomass[species_eq] <- ratio * IC_w_foliar_measurements$CohortBiomass[species_eq]
IC_w_foliar_measurements$WoodBiomass[species_eq] <- IC_w_foliar_measurements$CohortBiomass[species_eq] - IC_w_foliar_measurements$LeafBiomass[species_eq]
}
white_spruce_ratio
lodgepole_ratio
for (species in unique(IC_w_foliar_measurements$SpeciesName)) {
ratio<-NA
if (species %in% species_missing_ratios) {
if (species == "EngelmannSpruce") {
ratio <- white_spruce_ratio
} else if (species == "DouglasFir") {
ratio <- white_spruce_ratio+0.005#higher foliar ratio
} else if (species == "WesternWhitePine") {
ratio <- lodgepole_ratio+0.005#higher foliar ratio
} else {
ratio <- default_ratio
}
}
# apply respective ratios
species_eq <- IC_w_foliar_measurements$SpeciesName == species
IC_w_foliar_measurements$LeafBiomass[species_eq] <- ratio * IC_w_foliar_measurements$CohortBiomass[species_eq]
IC_w_foliar_measurements$WoodBiomass[species_eq] <- IC_w_foliar_measurements$CohortBiomass[species_eq] - IC_w_foliar_measurements$LeafBiomass[species_eq]
}
IC_w_foliar_measurements
head(IC_w_foliar_measurements[IC_w_foliar_measurements$SpeciesName=="DouglasFir"])
IC_w_foliar_measurements$SpeciesName=="DouglasFir"
head(IC_w_foliar_measurements$LeafBiomass[IC_w_foliar_measurements$SpeciesName=="DouglasFir"])
# for all other species using DIA specific foliage ratio
other_spp <- !(IC_w_foliar_measurements$SpeciesName %in% default_ratios_species)
# for all other species using DIA specific foliage ratio
other_spp <- !(IC_w_foliar_measurements$SpeciesName %in% species_missing_ratios)
other_spp
IC_w_foliar_measurements$LeafBiomass[other_spp] <- IC_w_foliar_measurements$Avg_Foliage_Ratio[other_spp] * IC_w_foliar_measurements$CohortBiomass[other_spp]
IC_w_foliar_measurements$WoodBiomass[other_spp] <- IC_w_foliar_measurements$CohortBiomass[other_spp] - IC_w_foliar_measurements$LeafBiomass[other_spp]
IC_w_foliar_measurements
# clean it
IC_new <- IC_w_foliar_measurements %>% select(MapCode, SpeciesName, CohortAge, CohortBiomass, WoodBiomass, LeafBiomass)
# print average ratios
ratios <- IC_new$WoodBiomass / IC_new$LeafBiomass
print(mean(ratios))
IC_new
seDIR
write.csv(IC_new, paste0(seDIR, "converted_files/AKCarbon_IC_WR_04082025_Foliar.csv"), row.names = FALSE)
getwd
getwd()
knitr::opts_chunk$set(echo = TRUE)
shapes <- c(0.1, 0.5, 0.9, 1, 1.5, 2, 5)
pal <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
x <- seq(0, 10, length.out = 100)
plot(NA, xlim = c(0,10), ylim = c(0,1))
for(i in 1:length(shapes)){
y <- dweibull(x, shape = shapes[i], scale = 1)
lines(y ~ x, type = "l", col = pal[i])
}
legend(x = 6, y = 0.7, cex = 0.7, legend = paste0("shape = ", shapes), lty = 1, col = pal[1:length(shapes)])
shapes <- c(0.1, 0.5, 0.9, 1, 1.5, 2, 5)
pal <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
x <- seq(0, 10, length.out = 100)
plot(NA, xlim = c(0,10), ylim = c(0,1))
for(i in 1:length(shapes)){
y <- dweibull(x, shape = shapes[i], scale = 1)
lines(y ~ x, type = "l", col = pal[i])
}
legend(x = 6, y = 0.7, cex = 0.7, legend = paste0("shape = ", shapes), lty = 1, col = pal[1:length(shapes)])
scales <- c(0.1, 0.5, 0.9, 1, 1.5, 2, 5)
pal <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
x <- seq(0, 10, length.out = 100)
plot(NA, xlim = c(0,10), ylim = c(0,1))
for(i in 1:length(scales)){
y <- dweibull(x, shape = 1, scale = scales[i])
lines(y ~ x, type = "l", col = pal[i])
}
legend(x = 6, y = 0.7, cex = 0.7, legend = paste0("scale = ", scales), lty = 1, col = pal[1:length(scales)])
a <- 2
b <- 1.5
c <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5)
d <- 1
scales <- c(0.1, 0.5, 0.9, 1, 1.5, 2, 5)
pal <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
x <- seq(0, 10, length.out = 100)
plot(NA, xlim = c(0,10), ylim = c(0,1))
for(i in 1:length(c)){
y <- (((a/b) * ((x/b)^(a-1)) * exp(- (x/b)^a)) + c[i]) * d
lines(y ~ x, type = "l", col = pal[i])
}
legend(x = 6, y = 0.7, cex = 0.7, legend = paste0("c = ", c), lty = 1, col = pal[1:length(c)])
a <- 2
b <- 1.5
c <- 0
d <- c(0.5, 0.9, 1, 1.3, 2, 5)
scales <- c(0.1, 0.5, 0.9, 1, 1.5, 2, 5)
pal <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
x <- seq(0, 10, length.out = 100)
plot(NA, xlim = c(0,10), ylim = c(0,1))
for(i in 1:length(d)){
y <- (((a/b) * ((x/b)^(a-1)) * exp(- (x/b)^a)) + c) * d[i]
lines(y ~ x, type = "l", col = pal[i])
}
legend(x = 6, y = 0.7, cex = 0.7, legend = paste0("d = ", d), lty = 1, col = pal[1:length(d)])
#should we restrict our analysis to plots that are near seedlings, near adult trees, or unrestricted?
#this is by far the slowest part of the script
range_method <- "seedling" #"seedling" or "adult"; other options skip this step and use all the data from the chosen states
#range buffer size -- how many meters can plots be from seedlings to count in the calculation?
range_buffer <- 10000
#should maximum suitability be set to 1 and everything scaled to match? This will (almost?)
# always increase total suitable light levels and thus regeneration
scale_max_p <- TRUE
#should the area under the curve be set to 1 for all species? This will cancel out
# differences in abundance/fecundity among species. Probably not recommended if you hae
# a lot of range-restricted species, unless you're using the range_method option above.
# But this is very much recommended if you're wanting to fit a true Weibull PDF where AUC = 1
# (i.e. using use_c_d == "neither")
set_auc_to_1 <- FALSE
#what formula should we use? See above equation fit_weibull. For a regular Weibull PDF,
# set use_c_d = "neither", to only use the shape and scale parameters. Otherwise,
# you can use the c parameter to translate the whole curve up or the d parameter to stretch the
# whole curve. This gives more flexibility in the kinds of shapes that can be fit,
# and allows for the area under the curve to be greater than 1.
use_c_d <- "d"
